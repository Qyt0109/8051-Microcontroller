C51 COMPILER V9.60.0.0   4X4_KEYPAD                                                        09/08/2022 21:24:58 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE 4X4_KEYPAD
OBJECT MODULE PLACED IN .\Objects\4x4 keypad.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Library\4x4 keypad.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\4x4 keypad.lst) TABS(2) OBJECT(.\Objects\4x4 keypad.obj)

line level    source

   1          #include "main.h"
   2          #include "4x4 keypad.h"
   3          #include "port.h"
   4          /*
   5          Can tao file header port.h de khai bao ket noi phan cung
   6          VD:
   7          
   8          #ifndef _PORT_H_
   9          #define _PORT_H_
  10          
  11          sbit Keypad_Row_A = P1^0;
  12          sbit Keypad_Row_B = P1^1;
  13          sbit Keypad_Row_C = P1^2;
  14          sbit Keypad_Row_D = P1^3;
  15          sbit Keypad_Col_1 = P1^4;
  16          sbit Keypad_Col_2 = P1^5;
  17          sbit Keypad_Col_3 = P1^6;
  18          sbit Keypad_Col_4 = P1^7;
  19          
  20          
  21          #endif
  22          
  23          */
  24          
  25          char Keypad_Value[4][4] = {'7', '8', '9', '/',
  26                                     '4', '5', '6', 'x',
  27                                     '1', '2', '3', '-',
  28                                    ON_C, '0', '=', '+'};
  29                                     
  30          void Set_All()
  31          {
  32   1        Keypad_Col_1 = 1;
  33   1        Keypad_Col_2 = 1;
  34   1        Keypad_Col_3 = 1;
  35   1        Keypad_Col_4 = 1;
  36   1        Keypad_Row_A = 1;
  37   1        Keypad_Row_B = 1;
  38   1        Keypad_Row_C = 1;
  39   1        Keypad_Row_D = 1;
  40   1      }
  41          
  42          char Check_Keypad()
  43          {
  44   1        char Keypad_Return = No_Key_Pressed;
  45   1        Set_All();
  46   1        
  47   1        Keypad_Row_A = 0;
  48   1        if (Keypad_Col_1 == 0)
  49   1          Keypad_Return = Keypad_Value[0][0];
  50   1        if (Keypad_Col_2 == 0)
  51   1          Keypad_Return = Keypad_Value[0][1];
  52   1        if (Keypad_Col_3 == 0)
  53   1          Keypad_Return = Keypad_Value[0][2];
  54   1        if (Keypad_Col_4 == 0)
C51 COMPILER V9.60.0.0   4X4_KEYPAD                                                        09/08/2022 21:24:58 PAGE 2   

  55   1          Keypad_Return = Keypad_Value[0][3];
  56   1        Keypad_Row_A = 1;
  57   1        
  58   1        Keypad_Row_B = 0;
  59   1        if (Keypad_Col_1 == 0)
  60   1          Keypad_Return = Keypad_Value[1][0];
  61   1        if (Keypad_Col_2 == 0)
  62   1          Keypad_Return = Keypad_Value[1][1];
  63   1        if (Keypad_Col_3 == 0)
  64   1          Keypad_Return = Keypad_Value[1][2];
  65   1        if (Keypad_Col_4 == 0)
  66   1          Keypad_Return = Keypad_Value[1][3];
  67   1        Keypad_Row_B = 1;
  68   1        
  69   1        Keypad_Row_C = 0;
  70   1        if (Keypad_Col_1 == 0)
  71   1          Keypad_Return = Keypad_Value[2][0];
  72   1        if (Keypad_Col_2 == 0)
  73   1          Keypad_Return = Keypad_Value[2][1];
  74   1        if (Keypad_Col_3 == 0)
  75   1          Keypad_Return = Keypad_Value[2][2];
  76   1        if (Keypad_Col_4 == 0)
  77   1          Keypad_Return = Keypad_Value[2][3];
  78   1        Keypad_Row_C = 1;
  79   1        
  80   1        Keypad_Row_D = 0;
  81   1        if (Keypad_Col_1 == 0)
  82   1          Keypad_Return = Keypad_Value[3][0];
  83   1        if (Keypad_Col_2 == 0)
  84   1          Keypad_Return = Keypad_Value[3][1];
  85   1        if (Keypad_Col_3 == 0)
  86   1          Keypad_Return = Keypad_Value[3][2];
  87   1        if (Keypad_Col_4 == 0)
  88   1          Keypad_Return = Keypad_Value[3][3];
  89   1        Keypad_Row_D = 1;
  90   1      
  91   1        return Keypad_Return;
  92   1      }
  93          
  94          
  95          
  96          
  97          
  98          
  99          
 100          
 101          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    119    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
